{"version":3,"sources":["redux/selectors.js","redux/films-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","api/api.js","redux/film-reducer.js","components/Film/Film.jsx","components/FilmsList/FilmsList.jsx","components/Spinner/Spinner.jsx","components/FilmsList/FilmsListContainer.jsx","components/FilmInfo/FilmInfo.jsx","components/FilmInfo/FilmInfoContainer.jsx","App.js","redux/store.js","index.js"],"names":["sortByTitle","a","b","titleA","title","toLowerCase","titleB","getSearchValue","state","searchValue","getSortedFilms","films","getFilms","filter","film","indexOf","getFilteredFilms","sort","initialState","filmsReducer","action","type","value","Header","handleChangeValue","className","to","placeholder","onChange","connect","setSearchValue","e","target","getItem","url","axios","then","res","data","filmsAPI","results","peopleAPI","planetsAPI","starshipsAPI","id","description","director","producer","releaseDate","characters","planets","starships","setPlanets","setPeople","people","setStarships","filmReducer","episode_id","opening_crawl","release_date","map","p","name","Film","FilmsList","setUrlFilm","f","key","onClick","Spinner","setFilms","useState","isLoading","setIsLoading","useEffect","FilmInfo","FilmInfoContainer","this","props","setFilm","getPlanets","getPeople","getStarships","setState","React","Component","dispatch","Promise","all","App","exact","render","path","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.86371ef9.chunk.js","sourcesContent":["const sortByTitle = (a, b) => {\r\n  const titleA = a.title.toLowerCase(),\r\n    titleB = b.title.toLowerCase();\r\n  if (titleA < titleB) {\r\n    return -1;\r\n  } else if (titleA > titleB) {\r\n    return 1;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const getFilm = state => {\r\n  return state;\r\n};\r\n\r\nexport const getFilms = state => {\r\n  return state.films;\r\n};\r\n\r\nexport const getSearchValue = state => {\r\n  return state.searchValue;\r\n};\r\n\r\nexport const getFilteredFilms = state => {\r\n  return getFilms(state).filter(film => {\r\n    const searchValue = film.title.toLowerCase();\r\n    return searchValue.indexOf(getSearchValue(state)) !== -1;\r\n  });\r\n};\r\n\r\nexport const getSortedFilms = state => {\r\n  return getFilteredFilms(state).sort(sortByTitle);\r\n};","const SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\";\r\nconst SET_FILMS = \"SET_FILMS\";\r\n\r\nexport const initialState = {\r\n  films: [],\r\n  searchValue: \"\"\r\n};\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILMS:\r\n      return {\r\n        ...state,\r\n        films: action.films\r\n      };\r\n    case SET_SEARCH_VALUE:\r\n      return {\r\n        ...state,\r\n        searchValue: action.value\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setFilms = films => {\r\n  return { type: SET_FILMS, films };\r\n};\r\nexport const setSearchValue = value => {\r\n  return { type: SET_SEARCH_VALUE, value };\r\n};\r\n\r\nexport default filmsReducer;\r\n","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = ({ searchValue, handleChangeValue }) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__logo\">\r\n        <NavLink to=\"/\">Star wars</NavLink>\r\n      </div>\r\n      <form className=\"header__search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchValue}\r\n          onChange={handleChangeValue}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSearchValue } from \"../../redux/selectors\";\r\nimport { setSearchValue } from \"../../redux/films-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = ({ searchValue, setSearchValue }) => {\r\n  const handleChangeValue = e => {\r\n    setSearchValue(e.target.value.toLowerCase());\r\n  };\r\n  return (\r\n    <Header searchValue={searchValue} handleChangeValue={handleChangeValue} />\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchValue: getSearchValue(state)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setSearchValue })(HeaderContainer);\r\n","import * as axios from \"axios\";\r\n\r\nconst baseAPI = 'https://swapi.co/api/';\r\n\r\nconst getItem = (url) => {\r\n  return axios.get(url)\r\n    .then(res => { return res.data})\r\n}\r\n\r\nexport const filmsAPI = {\r\n  getFilms(){\r\n    return axios.get(`${baseAPI}films/`)\r\n    .then(res => { return res.data.results})\r\n        \r\n  },\r\n  getFilm(url){\r\n    return getItem(url);\r\n  }\r\n}\r\n\r\nexport const peopleAPI = {\r\n  getPerson(url){\r\n    return getItem(url);\r\n  }\r\n}\r\n\r\nexport const planetsAPI = {\r\n  getPlanet(url){\r\n    return getItem(url);\r\n        \r\n  }\r\n}\r\nexport const starshipsAPI = {\r\n  getStarship(url){\r\n    return getItem(url);\r\n        \r\n  }\r\n}","import { peopleAPI, planetsAPI, starshipsAPI } from \"../api/api\";\r\n\r\nconst SET_FILM = \"SET_FILM\";\r\nconst SET_PLANETS = \"SET_PLANETS\";\r\nconst SET_PEOPLE = \"SET_PEOPLE\";\r\nconst SET_STARSHIPS = \"SET_STARSHIPS\";\r\nconst SET_URL = \"SET_URL\";\r\n\r\nexport const initialState = {\r\n  title: \"\",\r\n  id: 0,\r\n  description: \"\",\r\n  director: \"\",\r\n  producer: \"\",\r\n  releaseDate: 0,\r\n  characters: [],\r\n  planets: [],\r\n  starships: [],\r\n  url: \"\"\r\n};\r\n\r\nconst filmReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_FILM:\r\n      return {\r\n        ...state,\r\n        title: action.film.title,\r\n        id: action.film.episode_id,\r\n        description: action.film.opening_crawl,\r\n        director: action.film.director,\r\n        producer: action.film.producer,\r\n        releaseDate: action.film.release_date,\r\n        characters: action.film.characters,\r\n        planets: action.film.planets,\r\n        starships: action.film.starships\r\n      };\r\n    case SET_PLANETS:\r\n      return {\r\n        ...state,\r\n        planets: action.planets.map(p => p.name)\r\n      };\r\n    case SET_PEOPLE:\r\n      return {\r\n        ...state,\r\n        characters: action.people.map(p => p.name)\r\n      };\r\n    case SET_STARSHIPS:\r\n      return {\r\n        ...state,\r\n        starships: action.starships.map(p => p.name)\r\n      };\r\n    case SET_URL:\r\n      return {\r\n        ...state,\r\n        url: action.url\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setFilm = film => {\r\n  return { type: SET_FILM, film };\r\n};\r\nexport const setUrlFilm = url => {\r\n  return { type: SET_URL, url };\r\n};\r\nexport const setPlanets = planets => {\r\n  return { type: SET_PLANETS, planets };\r\n};\r\nexport const setPeople = people => {\r\n  return { type: SET_PEOPLE, people };\r\n};\r\nexport const setStarships = starships => {\r\n  return { type: SET_STARSHIPS, starships };\r\n};\r\n\r\nexport const getPlanets = planets => async dispatch => {\r\n  const value = await Promise.all(\r\n    planets.map(p => {\r\n      return planetsAPI.getPlanet(p);\r\n    })\r\n  );\r\n\r\n  dispatch(setPlanets(value));\r\n};\r\n\r\nexport const getPeople = people => async dispatch => {\r\n  const value = await Promise.all(\r\n    people.map(p => {\r\n      return peopleAPI.getPerson(p);\r\n    })\r\n  );\r\n\r\n  dispatch(setPeople(value));\r\n};\r\nexport const getStarships = starships => async dispatch => {\r\n  const value = await Promise.all(\r\n    starships.map(p => {\r\n      return starshipsAPI.getStarship(p);\r\n    })\r\n  );\r\n\r\n  dispatch(setStarships(value));\r\n};\r\n\r\nexport default filmReducer;","import React from \"react\";\r\nimport \"./Film.scss\";\r\n\r\nconst Film = ({ name, description, releaseDate }) => {\r\n  return (\r\n    <div className=\"film\">\r\n      <div className=\"film__name\">{name}</div>\r\n      <div className=\"film__description\">{description}</div>\r\n      <div className=\"film__release-date\">{releaseDate}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Film;\r\n","import React from \"react\";\r\nimport \"./FilmsList.scss\";\r\nimport Film from \"../Film/Film\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst FilmsList = ({ films, setUrlFilm }) => {\r\n  return (\r\n    <div className=\"films\">\r\n      {films.map(f => (\r\n        <NavLink\r\n          key={f.episode_id}\r\n          onClick={() => {\r\n            setUrlFilm(f.url);\r\n          }}\r\n          to={`/film?id=${f.episode_id}`}\r\n        >\r\n          <Film\r\n            key={f.episode_id}\r\n            name={f.title}\r\n            description={f.opening_crawl}\r\n            releaseDate={f.release_date}\r\n          />\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmsList;\r\n","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-wrapper\">\r\n      <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getSortedFilms } from \"../../redux/selectors\";\r\nimport { setFilms } from \"../../redux/films-reducer\";\r\nimport { setUrlFilm } from \"../../redux/film-reducer\";\r\nimport FilmsList from \"./FilmsList\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { filmsAPI } from \"../../api/api\";\r\n\r\nconst FilmsListContainer = ({ setFilms, films, setUrlFilm }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    filmsAPI.getFilms().then(films => {\r\n      setFilms(films);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <Spinner />}\r\n      {!isLoading && <FilmsList films={films} setUrlFilm={setUrlFilm} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    films: getSortedFilms(state.films)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilms, setUrlFilm })(\r\n  FilmsListContainer\r\n);\r\n","import React from 'react';\r\nimport './FilmInfo.scss';\r\n\r\nconst FilmInfo = ({title, director, producer, releaseDate, description, characters, planets, starships}) => {\r\n  return (\r\n    <div>\r\n        <div className=\"film-info\">\r\n          <div className=\"film-info__title\">\r\n            <h1>{title}</h1>\r\n          </div>\r\n          <div className=\"film-info__information\">\r\n            <span><b>director: </b>{director}</span>\r\n            <span><b>producer: </b>{producer}</span>\r\n            <span><b>releaseDate: </b>{releaseDate}</span>\r\n          </div>\r\n          <div className=\"film-info__description\">\r\n            <span>{description}</span>\r\n          </div>\r\n          <div className=\"film-info__planets\">\r\n            planets:\r\n            <ul>\r\n              {planets.map(p => (<li>{p}</li>))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"film-info__planets\">\r\n            people:\r\n            <ul>\r\n              {characters.map(p => (<li>{p}</li>))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"film-info__planets\">\r\n            starships:\r\n            <ul>\r\n              {starships.map(p => (<li>{p}</li>))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmInfo;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFilm } from \"../../redux/selectors\";\r\nimport FilmInfo from \"./FilmInfo\";\r\nimport {\r\n  setFilm,\r\n  setPlanets,\r\n  getPlanets,\r\n  getPeople,\r\n  getStarships\r\n} from \"../../redux/film-reducer\";\r\nimport { filmsAPI } from \"../../api/api\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nclass FilmInfoContainer extends React.Component {\r\n  state = {\r\n    isLoading: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    filmsAPI\r\n      .getFilm(this.props.film.url)\r\n      .then(film => {\r\n        this.props.setFilm(film);\r\n      })\r\n      .then(async () => {\r\n        await this.props.getPlanets(this.props.film.planets);\r\n      })\r\n      .then(async () => {\r\n        await this.props.getPeople(this.props.film.characters);\r\n      })\r\n      .then(async () => {\r\n        await this.props.getStarships(this.props.film.starships);\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    const {film} = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {isLoading && <Spinner />}\r\n        {!isLoading && <FilmInfo {...film} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    film: getFilm(state.film)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setFilm,\r\n  setPlanets,\r\n  getPlanets,\r\n  getPeople,\r\n  getStarships\r\n})(FilmInfoContainer);","import React from 'react';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport FilmsListContainer from './components/FilmsList/FilmsListContainer';\nimport {Route, HashRouter } from 'react-router-dom';\nimport FilmInfoContainer from './components/FilmInfo/FilmInfoContainer';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <HeaderContainer />\n      <Route exact render={() => <FilmsListContainer />} />\n      <Route path=\"/film/\" render={() => <FilmInfoContainer />} />\n    </HashRouter>\n  );\n}\n\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport filmsReducer from \"./films-reducer\";\r\nimport filmReducer from \"./film-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n  films: filmsReducer,\r\n  film: filmReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}